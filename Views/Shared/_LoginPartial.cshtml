@using Microsoft.AspNetCore.Identity
@using do_an_ltweb.Models

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@*@{
        bool isRegisterPage = ViewContext.ActionDescriptor.DisplayName.Contains("Register");
    }*@

@*<ul class="navbar-nav mr-auto">*@
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item @(ViewContext.ActionDescriptor.DisplayName.Contains("Manage") ? "login_btn" : "")">
        <a id="manage" class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@UserManager.GetUserName(User)!</a>
    </li>

    <li class="nav-item d_none sea_icon">
        <a class="nav-link" href="#">
            <i class="fa fa-shopping-bag" aria-hidden="true"></i>
        </a>
    </li>

    <li class="nav-item">
        @*<form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link">Logout</button>
            </form>*@

        <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/", new { area = "" })" method="post">
            <button type="submit" class="nav-link btn btn-link">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item @(ViewContext.ActionDescriptor.DisplayName.Contains("Login") ? "login_btn" : "")">
        <a class="nav-link" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
    <li class="nav-item @(ViewContext.ActionDescriptor.DisplayName.Contains("Register") ? "login_btn" : "")">
        <a class="nav-link" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
}
@*</ul>*@
